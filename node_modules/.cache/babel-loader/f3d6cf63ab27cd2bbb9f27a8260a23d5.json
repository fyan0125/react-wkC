{"ast":null,"code":"var _jsxFileName = \"/Users/fangyan/Desktop/L9_GooglePay/src/components/ProfileCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button } from \"antd\";\nimport { logoutFromFirebase, updateUserInfo } from \"../actions\";\nimport { StoreContext } from \"../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileCard = () => {\n  _s();\n\n  const {\n    state: {\n      userSignin: {\n        userInfo\n      }\n    },\n    dispatch\n  } = useContext(StoreContext);\n  const {\n    displayName,\n    email\n  } = userInfo;\n  const history = useHistory();\n  const [form] = Form.useForm();\n\n  const handleUpdate = values => {\n    console.log(values);\n    updateUserInfo(dispatch, values);\n  };\n\n  const handleLogout = () => {\n    logoutFromFirebase(dispatch);\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: handleUpdate,\n    name: \"normal_login\",\n    className: \"login-form\",\n    form: form,\n    initialValues: userInfo,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"name: \",\n      name: \"name\",\n      rules: [{\n        type: \"string\",\n        message: \"The input is not valid name!\"\n      }, {\n        message: \"Please input your name!\"\n      }],\n      hasFeedback: true,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"email: \",\n      name: \"email\",\n      rules: [{\n        type: \"email\",\n        message: \"The input is not valid E-mail!\"\n      }, {\n        message: \"Please input your E-mail!\"\n      }],\n      hasFeedback: true,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        message: \"Please input your password!\"\n      }],\n      hasFeedback: true,\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"rePassword\",\n      label: \"Re-enter Password\",\n      dependencies: [\"password\"],\n      hasFeedback: true,\n      rules: [{\n        message: \"Please re-enter your password!\"\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || getFieldValue(\"password\") === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error(\"The two passwords that you entered do not match!\"));\n        }\n\n      })],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form__button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"danger\",\n        style: {\n          marginTop: \"0.8rem\"\n        },\n        className: \"login-form__button\",\n        onClick: handleLogout,\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileCard, \"MTJ+Wn+QakBGPXwoTvt64guuSUo=\", false, function () {\n  return [useHistory, Form.useForm];\n});\n\n_c = ProfileCard;\nexport default ProfileCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileCard\");","map":{"version":3,"sources":["/Users/fangyan/Desktop/L9_GooglePay/src/components/ProfileCard.js"],"names":["React","useContext","useHistory","Form","Input","Button","logoutFromFirebase","updateUserInfo","StoreContext","ProfileCard","state","userSignin","userInfo","dispatch","displayName","email","history","form","useForm","handleUpdate","values","console","log","handleLogout","push","type","message","getFieldValue","validator","_","value","Promise","resolve","reject","Error","marginTop"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button } from \"antd\";\nimport { logoutFromFirebase, updateUserInfo } from \"../actions\";\nimport { StoreContext } from \"../store\";\n\nconst ProfileCard = () => {\n  const {\n    state: {\n      userSignin: { userInfo },\n    },\n    dispatch,\n  } = useContext(StoreContext);\n  const { displayName, email } = userInfo;\n  const history = useHistory();\n  const [form] = Form.useForm();\n\n  const handleUpdate = (values) => {\n    console.log(values)\n    updateUserInfo(dispatch, values);\n  };\n\n  const handleLogout = () => {\n    logoutFromFirebase(dispatch);\n    history.push(\"/\");\n  };\n  return (\n    <Form\n      onFinish={handleUpdate}\n      name=\"normal_login\"\n      className=\"login-form\"\n      form={form}\n      initialValues={userInfo}\n    >\n      <Form.Item\n        label=\"name: \"\n        name=\"name\"\n        rules={[\n          {\n            type: \"string\",\n            message: \"The input is not valid name!\",\n          },\n          {\n            message: \"Please input your name!\",\n          },\n        ]}\n        hasFeedback\n      >\n        <Input placeholder={displayName} />\n      </Form.Item>\n      <Form.Item\n        label=\"email: \"\n        name=\"email\"\n        rules={[\n          {\n            type: \"email\",\n            message: \"The input is not valid E-mail!\",\n          },\n          {\n            message: \"Please input your E-mail!\",\n          },\n        ]}\n        hasFeedback\n      >\n        <Input placeholder={email} />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        label=\"Password\"\n        rules={[\n          {\n            message: \"Please input your password!\",\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item\n        name=\"rePassword\"\n        label=\"Re-enter Password\"\n        dependencies={[\"password\"]}\n        hasFeedback\n        rules={[\n          {\n            message: \"Please re-enter your password!\",\n          },\n          ({ getFieldValue }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue(\"password\") === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(\n                new Error(\"The two passwords that you entered do not match!\")\n              );\n            },\n          }),\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n\n      <Form.Item>\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          className=\"login-form__button\"\n        >\n          Submit\n        </Button>\n\n        <Button\n          type=\"danger\"\n          style={{ marginTop: \"0.8rem\" }}\n          className=\"login-form__button\"\n          onClick={handleLogout}\n        >\n          Log out\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\nexport default ProfileCard;\n"]},"metadata":{},"sourceType":"module"}